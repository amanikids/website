= Tapsuey

Because <tt>`rake db:pull`</tt> is awesome.

== Install

 script/plugin install git://github.com/matthewtodd/tapsuey.git

Then create <tt>config/initializers/tapsuey.rb</tt>:

 Tapsuey.host     = 'myapp.com'
 Tapsuey.password = ENV['TAPSUEY_PASSWORD']

== Use

Assuming your app is up and running at 'myapp.com', run

 rake db:pull

to copy all your production data down into your development database.

== How it Works

Tapsuey is totally just glue code around Heroku's taps[http://github.com/ricardochimal/taps] gem -- that's where all the awesomeness is.

Basically, I re-mount the <tt>Taps::Server</tt> as Rails metal under the <tt>/tapsuey</tt> namespace and try to be fancy about reading your <tt>database.yml</tt>. That's pretty much it.

Note that I've vendored taps since it would otherwise try (and fail, under Rails) to load an explicit gem dependency on <tt>activerecord-2.2.2</tt>.

== Paperclip

If you're using paperclip[http://github.com/thoughtbot/paperclip] (or something like it) and keeping files on the filesystem rather than S3, something like this rake task will come in handy:

 namespace :db do
   namespace :pull do
     desc 'Pull production files to the local filesystem.'
     task :files do
       system 'rsync -rP --delete myapp:shared/public/system/ public/system'
     end
   end

   task :pull => 'db:pull:files'
 end
